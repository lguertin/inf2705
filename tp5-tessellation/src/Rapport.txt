Q1: Vous avez probablement remarqué que même en demandant un très grand
    niveau de tessellation, le générateur de tessellation ne produira pas
    une tessellation plus fine que le niveau maximum donné par la constante
    GL_MAX_TESS_GEN_LEVEL.  (On peut obtenir la valeur de cette constante
    avec glGet() et elle doit être au moins 64.)
    Que doit-on alors faire si on veut, malgré tout, une tessellation deux
    fois plus fine dans chaque direction?
Réponse:
	Puisque nous sommes limités par la carte graphique en place, une alternative pour avoir un niveau de tessellation deux fois plus fin serait de doubler le nombre de sommets de nos surfaces. En envoyant une augmentation du nombre de sommets et du nombre de connectivités au nuanceur de Tessellation, il pourra ensuite faire son travail et approximer les autres points en subdivisant comme il le faisait avant de doubler le nombre de données envoyées.


Q2: Comment implanter la visualisation d'une surface quelconque exprimée de
    façon paramétrique: S(s,t) = (x(s,t),y(s,t),z(s,t))

    Par exemple, une sphère:
    S(s,t) = ( sin(t)*cos(s), sin(t)*sin(s), cos(t) );
    avec s = 0 .. 2*PI, t = 0 .. PI.

    ou une fonction plus complexe:

    S(s,t) = ( (4/3)^s*sin(t)*sin(t)*cos(s),
               (4/3)^s*sin(t)*sin(t)*sin(s),
               (4/3)^s*sin(t)*cos(t) );
    avec s = 0 .. 1, t = 0 .. 2*PI.
Réponse:
	En utilisant la fonction, nous pouvons transformer chaque point donnés en coordonnées sphériques. De cette façon nous ne traitons plus nos points sur un cartésien que ne peut que retourner des valeurs de z. Ainsi, avec les paramètres xy transformés, nous pouvons ensuite les introduire dans la fonction S(s,t) à 3 coordonnées puisque xy sont devenu nos nouveau s (theta) et t (phi) respectivement.
	
	
